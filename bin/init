#!/usr/bin/env bash
set -e

# 1) Seed .env from the example if missing
[ ! -f .env ] && cp .env.example .env

# 2) Remove any existing OPENAI_API_KEY line so we can re-add the real one
# macOS/BSD sed:
# Cross-platform sed to delete OPENAI_API_KEY line
if sed --version >/dev/null 2>&1; then
  # GNU sed (Linux)
  sed -i '/^OPENAI_API_KEY=/d' .env
else
  # BSD sed (macOS)
  sed -i '' '/^OPENAI_API_KEY=/d' .env
fi

# 3) If they’ve exported it, grab it now
if [ -n "$OPENAI_API_KEY" ]; then
  echo "→ Adding OPENAI_API_KEY from your environment into .env"
  echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env
fi

# 4) Otherwise, prompt once (skip if in CI)
if ! grep -q '^OPENAI_API_KEY=' .env; then
  if [ -n "$CI" ]; then
    echo "Skipping OpenAI API key prompt in CI"
    echo "OPENAI_API_KEY=demo-placeholder" >> .env
  else
    read -p "🔑 Enter your OpenAI API key: " KEY
    echo "OPENAI_API_KEY=$KEY" >> .env
  fi
fi

# 5) Init submodule on fresh clone only
if [ ! -d ".git/modules/vendor/gems/llama_bot_rails" ]; then
  git submodule sync
  git submodule update --init --recursive
fi

# if command -v docker-compose >/dev/null 2>&1; then
#   docker-compose run --rm web rails db:migrate
# else
#   echo "❌ docker-compose not found. Skipping migration."
# fi