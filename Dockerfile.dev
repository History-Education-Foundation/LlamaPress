# syntax = docker/dockerfile:1
ARG RUBY_VERSION=3.3.5
FROM docker.io/library/ruby:$RUBY_VERSION-slim

# Fix for apt-get issues by using a more reliable mirror and setting apt configs
RUN sed -i 's#deb.debian.org/debian#cdn-fastly.deb.debian.org/debian#g' /etc/apt/sources.list.d/debian.sources
RUN echo "Acquire::http::Pipeline-Depth 0;" > /etc/apt/apt.conf.d/99custom && \
    echo "Acquire::http::No-Cache true;" >> /etc/apt/apt.conf.d/99custom && \
    echo "Acquire::BrokenProxy    true;" >> /etc/apt/apt.conf.d/99custom

# Install base packages and build dependencies
RUN apt-get clean && \
    apt-get update -qq && \
    apt-get install --no-install-recommends -y \
      build-essential \
      git \
      libpq-dev \
      pkg-config \
      curl \
      postgresql-client \
      nodejs \
      npm && \
    rm -rf /var/lib/apt/lists/*

# Configure npm
RUN npm config set fund false --global

WORKDIR /rails

# Set development environment
ENV RAILS_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle" \
    BOOTSNAP_CACHE_DIR="/rails/tmp/cache/bootsnap"

COPY Gemfile Gemfile.lock ./

# Install gems
RUN bundle install

# Expose port 3000 to allow communication to the Rails server
EXPOSE 3000

# Start the Rails server
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"] 